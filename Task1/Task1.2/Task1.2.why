theory Task1_2

  use import int.Int

predicate pred (x : int) (y1 : int) (y2 : int) (y3 : int) =
  (y2 = (y1*y1*y1) && (y3 = 3*y1*y1+3*y1+1) && ((y1*y1*y1) <= x))
goal sa : forall x : int.
  (x >= 0) -> (pred x 0 0 1)

goal aa : forall x : int, y1 : int, y2 : int, y3 : int.
  (x >= 0) && (y2+y3 <= x) && pred x y1 y2 y3
  ->
  (pred x (y1+1) (y2+y3) (y3+6*y1+6))

goal ah : forall x : int, y1 : int, y2 : int, y3 : int.
  (x >= 0) && ((y2+y3) > x) && pred x y1 y2 y3 
  ->
  ((y1*y1*y1) <= x) && (x < (y1+1)*(y1+1)*(y1+1))

end